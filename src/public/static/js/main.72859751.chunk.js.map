{"version":3,"sources":["redux/actions/index.js","redux/reducers/theme.js","redux/reducers/screen.js","redux/reducers/language.js","redux/reducers/session.js","redux/reducers/user.js","utils/getValueOrDefault.js","containers/Desktop.js","constants/colors.js","translations/index.js","components/ScrollView.js","components/KitIcon.js","components/SettingsScreen/SettingsItem.js","components/SettingsScreen/SettingsSeparator.js","components/SettingsScreen/SettingsVersion.js","constants/api.js","utils/ajax.js","components/ImageOffline.js","components/SettingsScreen/SettingsHeader.js","screens/Settings.js","components/PasswordInputText.js","utils/emailValidation.js","views/SignIn.js","components/AspectRatio.js","views/CreateCard.js","redux/reducers/cards.js","redux/reducers/selectedCard.js","screens/Home.js","components/Mobile/Content.js","components/Mobile/TabBarItem.js","components/Mobile/TabBar.js","containers/Mobile.js","Adaptive.js","navigation/AppNavigator.js","screens/UnderConstruction.js","screens/Document.js","navigation/AppRouter.js","App.js","serviceWorker.js","redux/reducers/index.js","redux/reducers/notifications.js","redux/reducers/friends.js","redux/reducers/share.js","index.js"],"names":["setTheme","theme","type","setScreen","screen","setLanguage","language","setSession","session","setUser","user","getValueOrDefault","value","def","undefined","Desktop","react_default","a","createElement","className","Component","colors","light","primary","primary_modal","background","tabBar","tabbar","text","textSoft","icon","border","card","cardLines","textInputBg","dark","translate","en","ru","es","getText","t","alias","params","p","replace","tr","ScrollView","style","this","props","children","connect","state","Icon","color","size","name","dist_default","iconSet","defaultProps","SettingsItem","_this$props","item","rightText","status","onPress","separator","title","borderBottom","onClick","KitIcon","fontSize","marginLeft","textAlign","width","height","es_switch","checked","onChange","backgroundColor","dispatch","SettingsVersion","SettingsSeparator","version","__package","build","year","Date","getFullYear","host","api","registration","method","uri","auth","login","logout","check_session","sync_user","save_user","create_card","save_card","delete_card","delete_picture","get_card","sync_card","add_card","remove_card","get_all_friends","sync_friends","get_all_notifications","sync_notifications","set_notifications_viewed","notification_action","search","save_search","sync_search","share","doc","sync_cardholder","sign","get_user","update_user","socket_room_card","ajax","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee2","data","wrap","_context2","prev","next","fetch","getURL","getParams","then","res","json","_ref2","_callee","_context","abrupt","stop","_x3","apply","arguments","catch","e","console","log","ok","sent","_x","_x2","url","param","headers","Accept","Content-Type","cache","credentials","body","JSON","stringify","ImageOffline","_this","classCallCheck","defaultPic","possibleConstructorReturn","getPrototypeOf","call","alpha","rounded","key","source","isNaN","parseInt","getPicture","nexProps","setState","getPictureId","pictureId","getSize","pictures","length","defaultStyles","container","alt","src","React","flexDirection","justifyContent","alignItems","overflow","SettingsHeader","cards","username","email","styles","titleContainer","titleIconContainer","components_ImageOffline","borderRadius","rounder","titleTextContainer","nameText","emailText","descriptionText","flex","paddingHorizontal","paddingTop","paddingBottom","paddingLeft","display","marginRight","fontWeight","marginTop","Content","changeTheme","_callee3","_context3","Modal","alert","logout_confirm","no","yes","_onPress","clearCache","_callee4","_context4","clearHistory","_callee5","_context5","shareKitkard","_callee6","_context6","action","changeLanguage","window","location","operation","components_ScrollView","SettingsScreen_SettingsHeader","SettingsScreen_SettingsItem","SettingsScreen_SettingsVersion","PasswordInputText","changePwdType","newState","password","icEye","iconSize","placeholder","evt","target","PropTypes","Function","emailValidation","test","md5","require","SignIn","enabled","socialEnabled","spinner","is_login","toggleIsLogin","validate","hash","t0","incorrect_email","user_exist","unreachable","incorrect_username","_this2","antd_mobile_es","toast","animating","marginBottom","setEmail","autoCapitalize","PasswordInputText_PasswordInputText","iconColor","setPassword","disabled","googleSignIn","facebookSignIn","AspectRatio","resize","widthRatio","heightRatio","maxHeight","clientHeight","maxWidth","clientWidth","addEventListener","removeEventListener","ref","CreateCard","setCardname","cardname","cardNameIsValid","createCard","saveCard","addUserCard","selectCard","onCancel","card_exist","flip","match","isFirst","components_AspectRatio","maxLength","CreateCard_CancelButton","hidden","CancelButton","hide","Home","renderHome","views_SignIn","views_CreateCard","getScreen","screens_Settings","screens_Home","TabBarItem","selected","selectedCard","path","Item","Link","to","concat","onSelect","TabBar","select","setTabBarItem","Mobile_TabBarItem","Mobile","Mobile_Content","Mobile_TabBar","withAdaptive","mapSizeToComponent","containers_Mobile","containers_Desktop","AppNavigator","pathname","startsWith","Adaptive","UnderConstruction","userLanguage","getGooglePlayButton","href","getApplePlayButton","detectBrowserLanguage","split","translation","site_under_construction","try_again_later","install_our_app","Document","content","loadDocument","document","lang","html","renderHTML","UNDER_CONSTRUCTION","screens_UnderConstruction","navigation_AppNavigator","Help","screens_Document","About","Policy","Terms","Conditions","AppRouter","BrowserRouter","Switch","Route","exact","component","render","Redirect","App","getStateFromLS","saveStateToLocalStorage","bind","saveToLocalStorage","localStorage","getItem","parse","isObject","removeItem","setItem","navigation_AppRouter","Boolean","hostname","combineReducers","objectSpread","toConsumableArray","search_updated","updated","defineProperty","notifications","i","findIndex","n","_id","notification","slice","friends","friend","filter","f","friend_cardname","persistedState","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","src_App_0","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.72859751.chunk.js","sourcesContent":["import {selected_theme} from \"../reducers/theme\";\nimport {selected_screen} from \"../reducers/screen\";\nimport {selected_language} from \"../reducers/language\";\nimport {save_search, save_user, set_user} from \"../reducers/user\";\nimport {add_user_card} from \"../reducers/user\";\nimport {set_session} from \"../reducers/session\";\nimport {select_card} from \"../reducers/selectedCard\";\nimport {delete_card, save_card, delete_all_cards, save_card_params} from \"../reducers/cards\";\nimport {set_notifications, save_notification} from \"../reducers/notifications\";\nimport {delete_friend, save_friend, set_friends} from \"../reducers/friends\";\nimport {delete_all_pictures, delete_picture, save_picture} from \"../reducers/pictures\";\nimport {set_share} from \"../reducers/share\";\n\nexport const setTheme = (theme) => ({\n    type: selected_theme,\n    theme\n});\n\nexport const setScreen = (screen) => ({\n    type: selected_screen,\n    screen\n});\n\nexport const setLanguage = (language) => ({\n    type: selected_language,\n    language\n});\n\nexport const setSession = (session) => ({\n    type: set_session,\n    session\n});\n\nexport const setUser = (user) => ({\n    type: set_user,\n    user\n});\n\nexport const saveUser = (user) => ({\n    type: save_user,\n    user\n});\n\nexport const saveSearch = (search, updated) => ({\n    type: save_search,\n    search,\n    updated\n});\n\nexport const addUserCard = (cardname) => ({\n    type: add_user_card,\n    cardname\n});\n\nexport const selectCard = (cardname) => ({\n    type: select_card,\n    cardname\n});\n\nexport const saveCard = (card) => ({\n    type: save_card,\n    card\n});\n\nexport const saveCardParams = (card) => ({\n    type: save_card_params,\n    card\n});\n\nexport const deleteCard = (cardname) => ({\n    type: delete_card,\n    cardname\n});\n\nexport const deleteAllCards = () => ({\n    type: delete_all_cards\n});\n\n\nexport const setNotifications = (notifications) => ({\n    type: set_notifications,\n    notifications\n});\n\nexport const saveNotification = (notification) => ({\n    type: save_notification,\n    notification\n});\n\n\n\nexport const setFriends = (friends) => ({\n    type: set_friends,\n    friends\n});\n\nexport const saveFriend = (friend) => ({\n    type: save_friend,\n    friend\n});\n\nexport const deleteFriend = (friend_cardname, cardname) => ({\n    type: delete_friend,\n    friend_cardname,\n    cardname\n});\n\n\n\n\nexport const savePicture = (picture) => ({\n    type: save_picture,\n    picture\n});\n\nexport const deletePicture = (picture) => ({\n    type: delete_picture,\n    picture\n});\n\nexport const deleteAllPictures = () => ({\n    type: delete_all_pictures\n});\n\nexport const setShare = (share) => ({\n    type: set_share,\n    share\n});\n","export const selected_theme = \"selected_theme\";\n\nexport default (theme = 'light', action) => {\n    switch(action.type)\n    {\n        case selected_theme:\n            return action.theme;\n        default:\n            return theme;\n    }\n}\n","export const selected_screen = \"selected_screen\";\n\nexport default (screen = 'my_cards', action) => {\n    switch(action.type)\n    {\n        case selected_screen:\n            return action.screen;\n        default:\n            return screen;\n    }\n}\n","export const selected_language = \"selected_language\";\n\nexport default (language = 'none', action) => {\n    switch(action.type)\n    {\n        case selected_language:\n            return action.language;\n        default:\n            return language;\n    }\n}\n","export const set_session = \"set_session\";\n\nexport default (session = null, action) => {\n    switch(action.type)\n    {\n        case set_session:\n            return action.session;\n        default:\n            return session;\n    }\n}\n","export const set_user = \"set_user\";\nexport const add_user_card = \"add_user_card\";\nexport const save_search = \"save_search\";\nexport const save_user = \"save_user\";\n\nexport default (user = null, action) => {\n    switch(action.type)\n    {\n        case set_user:\n            return action.user;\n        case add_user_card:\n            return {\n                ...user,\n                cards: [...user.cards, action.cardname]\n            };\n        case save_search:\n            return {\n                ...user,\n                search: action.search,\n                search_updated: action.updated,\n            };\n        case save_user:\n            console.log(\"save_user\")\n            return {\n                ...user,\n                ...action.user\n            };\n        default:\n            return user;\n    }\n}\n","const getValueOrDefault = (value, def) => {\n    if (value === undefined || value === null || value === '' || value === 'none') {\n        return def;\n    }\n    return value;\n};\n\nexport default getValueOrDefault;","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';  // or 'antd/dist/antd.less'\n\nclass Desktop extends Component {\n    render() {\n        return (\n            <div className=\"desktop\">\n                Desktop\n            </div>\n        );\n    }\n}\n\nexport default Desktop;\n","const colors = {\n    light: {\n        primary: '#10a66f',\n        primary_modal: '#085237',\n        background: 'white',\n        tabBar: '#f8f8f8',\n        tabbar: '#f8f8f8',\n        text: \"#292929\",\n        textSoft: \"rgba(150, 150, 150, 1)\",\n        icon: \"gray\",\n        border: '#EFEFEF',\n        card: \"white\",\n        cardLines: \"#EFEFEF\",\n        textInputBg: 'rgba(0, 0, 0, 0.2)'\n    },\n    dark: {\n        primary: '#10a66f',\n        primary_modal: '#085237',\n        background: '#282625',\n        tabBar: '#000000',\n        tabbar: '#000000',\n        text: '#fcfcfc',\n        textSoft: \"rgba(150, 150, 150, 1)\",\n        icon: \"gray\",\n        border: \"#424242\",\n        card: \"#424242\",\n        cardLines: \"#666666\",\n        textInputBg: 'rgba(255, 255, 255, 0.2)'\n    }\n};\n\nexport default colors;","import en from './en.json';\nimport es from './es.json';\nimport ru from './ru.json';\n\nconst translate = {\n    en: en,\n    ru: ru,\n    es: es,\n};\n\nexport default translate;\n\nexport const tr = (alias, params) => {\n    let text = alias;\n    if (params !== undefined) {\n        for (const p in params) {\n            text = text.replace(\"{{\" + p + \"}}\", params[p]);\n        }\n    }\n    if (text !== undefined && text !== \"\") {\n        return text;\n    } else {\n        // console.log(alias);\n        return alias\n    }\n};\n\nexport const getText = (t, alias, params) => {\n    if (t !== undefined && t[alias] !== undefined) {\n        return tr(t[alias], params);\n    } else {\n        // console.log(alias);\n        return alias;\n    }\n};","import React, { Component } from 'react';\nimport connect from \"react-redux/es/connect/connect\";\nimport '../styles/ScrollView.scss';\n\nclass ScrollView extends Component {\n\n    render() {\n        return (\n            <div className={\"scroll-view\"} style={this.props.style}>\n                <div>\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    theme: state.theme\n});\n\nexport default connect(mapStateToProps)(ScrollView)\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IcomoonReact from 'icomoon-react';\nimport iconSet from '../assets/selection.json';\n\nconst Icon = (props) => {\n    const { color, size, name } = props;\n    return <IcomoonReact iconSet={iconSet} color={color} size={size} icon={name} />;\n};\n\nIcon.propTypes = {\n    color: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nIcon.defaultProps = {\n    color: '#f00',\n    size: '100%',\n};\n\nexport default Icon;\n","import React, { Component } from 'react';\nimport {Switch} from 'antd';\nimport {connect} from \"react-redux\";\nimport colors from \"../../constants/colors\";\nimport KitIcon from \"../KitIcon\";\nimport translate, {getText} from \"../../translations\";\n\nclass SettingsItem extends Component {\n\n    render() {\n        const {theme, language, item, rightText, status, onPress, separator} = this.props;\n        const color = colors[theme];\n        const t = translate[language];\n\n        const title = item;\n        const icon = this.props.icon || item;\n\n        return (\n            <div className={\"settings-item\"} style={{borderBottom: separator === false ? 'none' : '1px solid ' + color.border}}>\n                <div\n                    className={\"settings-item-button\"}\n                    onClick={() => onPress(item)}\n                >\n                    <KitIcon name={icon} size={20} color={color.icon}/>\n                    <div className=\"button-container\">\n                        <div style={{color: color.text, fontSize: 16, marginLeft: 10, textAlign: 'left'}}>{getText(t, title)}</div>\n                        {rightText === undefined || rightText === \"\" ? null :\n                            <div style={{color: color.text, fontSize: 16, marginLeft: 10}}>{rightText}</div>\n                        }\n                        {\n                            status === undefined ? null :\n                                <div style={{width: 50, height: '100%'}}><Switch checked={status} onChange={() => onPress(item)} color={color.primary}/></div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    theme: state.theme,\n    screen: state.screen,\n    language: state.language,\n});\n\nexport default connect(\n    mapStateToProps\n)(SettingsItem)\n","import React, { Component } from 'react';\n\nimport {connect} from \"react-redux\";\nimport {setTheme} from \"../../redux/actions\";\nimport colors from \"../../constants/colors\";\nimport translate, {getText} from \"../../translations\";\n\nclass SettingsItem extends Component {\n\n    render() {\n        const {theme, title, language} = this.props;\n        const color = colors[theme];\n        const t = translate[language];\n\n        return (\n            <div className=\"settings-header\" style={{backgroundColor: color.border}}>\n                <span style={{color: color.textSoft, fontSize: 13}}>{getText(t, title)}</span>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    theme: state.theme,\n    screen: state.screen,\n    language: state.language,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setTheme: theme => dispatch(setTheme(theme))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SettingsItem)\n","import React, { Component } from 'react';\n\nimport {connect} from \"react-redux\";\nimport colors from \"../../constants/colors\";\nimport SettingsSeparator from \"./SettingsSeparator\";\n\nimport translate, {getText} from \"../../translations\";\n\nimport __package from '../../../package.json';\n\nclass SettingsVersion extends Component {\n\n    render() {\n        const {theme, language} = this.props;\n        const color = colors[theme];\n        const t = translate[language];\n\n        return (\n            <div className='settings-version' style={{backgroundColor: color.border}}>\n                <SettingsSeparator title=\"\"/>\n                <div className='text' style={{color: color.textSoft}}>\n                    {getText(t, \"version\", {version: __package.version, build: __package.build})}\n                </div>\n                <div className='text' style={{color: color.textSoft}}>\n                    {getText(t, \"copyright\", {year: new Date().getFullYear()})}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    theme: state.theme,\n    language: state.language,\n});\n\nexport default connect(\n    mapStateToProps\n)(SettingsVersion)\n","const host = {\n    // uri: \"http://192.168.100.10:3000\",\n    // uri: \"https://kitkard.dankocher.net\",\n    uri: \"https://kitkard.com\",\n};\n\nconst api = {\n    registration: {method: \"POST\", uri: \"/kit/reg/\"},\n    auth: {method: \"POST\", uri: \"/kit/auth/\"},\n    login: {method: \"POST\", uri: \"/kit/login/\"},\n    logout: {method: \"GET\", uri: \"/kit/logout/:session\"},\n\n    check_session: { method: \"GET\",  uri: \"/kit/user/cs/:session\" },\n    sync_user: { method: \"GET\", uri: \"/kit/user/sync/:updated\" },\n    save_user: { method: \"POST\", uri: \"/kit/user/save/\" },\n\n    create_card: {method: \"POST\", uri: \"/kit/user/card/create/\"},\n    save_card: {method: \"POST\", uri: \"/kit/user/card/save/:cardname/\"},\n    delete_card: {method: \"DELETE\", uri: \"/kit/user/card/delete/:cardname/\"},\n    delete_picture: {method: \"DELETE\", uri: \"/pic/:cardname/:picture\"},\n    get_card: {method: \"GET\", uri: \"/kit/card/:cardname/\"},\n    sync_card: {method: \"GET\", uri: \"/kit/card/sync/:cardname/\"},\n\n    add_card: {method: \"PUT\", uri: \"/kit/cardholder/add/\"},\n    remove_card: {method: \"DELETE\", uri: \"/kit/cardholder/remove/\"},\n\n\n    get_all_friends: { method: \"GET\",  uri: \"/kit/friends/\" },\n    sync_friends: { method: \"GET\",  uri: \"/kit/friends/sync/:cardname/:updated\" },\n\n    get_all_notifications: { method: \"GET\",  uri: \"/kit/notifications/\" },\n    sync_notifications: { method: \"GET\",  uri: \"/kit/notifications/sync/:cardname/:updated\" },\n    set_notifications_viewed: { method: \"POST\",  uri: \"/kit/notifications/viewed/\" },\n    notification_action: { method: \"POST\",  uri: \"/kit/notification/action/\" },\n\n    search: {method: \"POST\", uri: \"/kit/search/\"},\n    save_search: {method: \"POST\", uri: \"/kit/user/save_search/\"},\n    sync_search: {method: \"GET\", uri: \"/kit/user/sync_search/:search_updated\"},\n\n    share: {method: \"PUT\", uri: \"/kit/share/\"},\n\n    doc: {method: \"GET\", uri: \"/kit/doc/:doc/:lang\"},\n\n\n\n\n    sync_cardholder: {method: \"GET\", uri: \"/kit/cardholder/sync/:cardname\"},\n\n\n    sign: { method: \"POST\", uri: \"/kit/user/\" },\n    get_user: { method: \"POST\", uri: \"/kit/user/:session\" },\n    update_user: { method: \"POST\", uri: \"/kit/user/update/\" },\n\n\n\n\n\n\n\n\n\n\n    socket_room_card: \"/krc\"\n};\n\n\nexport { host, api };\n","import {host} from \"../constants/api\";\n\n\nconst ajax = async (api, data) => {\n\n    return await fetch(getURL(api, data), getParams(api.method, data))\n        .then(res => res.json())\n        .then(async res => { return res})\n        .catch((e) => {\n            console.log(e);\n            return {ok: false, status: \"unreachable\"}\n        });\n};\n\nexport default ajax;\n\nconst getURL = (api, data) => {\n    let url = host.uri + api.uri;\n\n    for (const param in data) {\n        url = url.replace(\":\"+param, data[param])\n    }\n\n    return url;\n};\n\nconst getParams = (method, data) => {\n    if(method === \"POST\" || method === \"PUT\" || method === \"DELETE\" || data == null) {\n        return ({\n            method: method,\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            cache: 'no-cache',\n            credentials: 'include',\n            body: JSON.stringify(data),\n        })\n    } else {\n        return ({\n            method: method,\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            cache: 'no-cache',\n            credentials: 'include'\n        })\n    }\n};\n","import React from 'react';\nimport  {host} from '../constants/api';\n// import {OfflineImage} from \"react-native-image-offline\";\n\nclass ImageOffline extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const defaultPic = this.props.alpha === false ? \"/assets/images/logo_round_white.png\"\n                            : this.props.rounded === true ? (\"/assets/images/logo_round_gray.png\") : (\"/assets/images/logo_gray.png\");\n        this.state = {\n            key: \"default\",\n            source: defaultPic,\n            defaultPic: defaultPic\n        }\n    }\n\n    getSize(props) {\n        if (isNaN(props.size)) {\n            let size = parseInt(props.size);\n            if (size <= 100) return 's';\n            else return 'm';\n        } else {\n            switch (props.size) {\n                case \"long\": case \"l\": case \"big\": return \"l\";\n                case \"small\": case 's': return \"s\";\n                case \"medium\": case \"m\": default: return \"m\";\n            }\n        }\n    }\n\n    componentWillMount() {\n        this.getPicture(this.props);\n    }\n\n    componentWillReceiveProps(nexProps) {\n        this.getPicture(nexProps);\n    }\n\n    async getPicture(nexProps) {\n\n        if (this.props.alpha === false) {\n            this.setState({\n                defaultPic: (\"/assets/images/logo_round_white.png\")\n            })\n        } else if (this.props.rounded) {\n        } else {\n            this.setState({\n                defaultPic: (\"/assets/images/logo_gray.png\")\n            })\n        }\n\n        let pictureId = await this.getPictureId(nexProps);\n\n        let size = this.getSize(nexProps);\n\n        if (pictureId !== null && pictureId !== undefined) {\n                let source = \"/pic/\" + size + \"/\" + pictureId;\n                let url = host.uri + source;\n\n                this.setState({\n                    key: url,\n                    source: url\n                });\n\n        } else {\n            this.setState({\n                key: 'default',\n                source: this.state.defaultPic\n            });\n        }\n    }\n\n    async getPictureId(props) {\n\n        if (props.card !== undefined) {\n            let pictures = props.card.pictures;\n            if (pictures === undefined ||\n                pictures.length === 0 || pictures[0] === \"default\") {\n                return null;\n            } else {\n                return pictures[0];\n            }\n        } else return null;\n    }\n\n\n    render() {\n        let style = this.props.style;\n        return (\n        <span style={[defaultStyles.container, style]}>\n            {\n                // this.state.key === 'default' ?\n                    <img alt={this.state.key} src={this.state.source} style={style}/>\n                    // :\n                    // <OfflineImage\n                    //     key={this.state.key}\n                    //     style={ style }\n                    //     fallbackSource={ this.state.defaultPic }\n                    //     source={ this.state.source }\n                    // />\n            }\n\n        </span>\n        )\n    }\n}\n\nexport default (ImageOffline)\n\n\nconst defaultStyles = {\n    container: {\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        overflow: 'hidden'\n    }\n};\n\n","import React, { Component } from 'react';\n\nimport {connect} from \"react-redux\";\nimport {setTheme} from \"../../redux/actions\";\nimport colors from \"../../constants/colors\";\nimport ImageOffline from \"../ImageOffline\";\n\n\nclass SettingsHeader extends Component {\n\n    render() {\n        const {user} = this.props;\n\n        const card = user !== null ? this.props.cards[user.username] : undefined;\n        const email = user !== null ? user.email : \"\";\n        const username = user !== null ? '+'+user.username : \"\";\n        return (\n            <div style={styles.titleContainer}>\n                <div style={styles.titleIconContainer}>\n                    <ImageOffline style={{ width: 80, height: 80, borderRadius: 40 }} card={card} size={80} rounder={true} alpha={false}/>\n                </div>\n\n                <div style={styles.titleTextContainer}>\n                    {\n                        card === undefined || card.name === \"\" ? null :\n                        <div style={styles.nameText} >\n                            {card.name}\n                        </div>\n                    }\n                    {\n                        user === undefined || user === null ? null :\n                            <div style={styles.emailText}>\n                                {email}\n                            </div>\n                    }\n                    {\n                        user === undefined || user === null || user.username === undefined || user.username === \"\" ? null :\n                            <div style={styles.descriptionText}>\n                                {username}\n                            </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    cards: state.cards,\n    theme: state.theme,\n    screen: state.screen,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setTheme: theme => dispatch(setTheme(theme))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SettingsHeader)\n\nconst styles = {\n    container: {\n        flex: 1,\n        width: '100%',\n        height: 100,\n        backgroundColor: colors.light.primary\n    },\n    titleContainer: {\n        paddingHorizontal: 10,\n        paddingTop: 10,\n        paddingBottom: 10,\n        paddingLeft: 10,\n        flexDirection: 'row',\n        alignItems: 'center',\n        display: 'inline-flex',\n        width: '100%',\n        backgroundColor: colors.light.primary\n    },\n    titleTextContainer: {\n        alignItems: 'center',\n    },\n    titleIconContainer: {\n        marginRight: 10,\n        paddingTop: 2,\n        borderRadius: 40\n    },\n    nameText: {\n        fontWeight: '600',\n        fontSize: 18,\n        color: 'white',\n        textAlign: 'left'\n    },\n    emailText: {\n        color: 'white',\n        fontSize: 14,\n        textAlign: 'left'\n    },\n    descriptionText: {\n        fontSize: 14,\n        marginTop: 5,\n        textAlign: 'left',\n        color: 'white'\n    }\n};\n","import React, { Component } from 'react';\nimport { Modal } from 'antd-mobile';\n\nimport '../styles/Settings.scss';\nimport {setLanguage, setSession, setTheme, setUser} from \"../redux/actions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport colors from \"../constants/colors\";\nimport translate, {getText} from \"../translations\";\nimport ScrollView from \"../components/ScrollView\";\nimport SettingsItem from \"../components/SettingsScreen/SettingsItem\";\nimport SettingsSeparator from \"../components/SettingsScreen/SettingsSeparator\";\nimport SettingsVersion from \"../components/SettingsScreen/SettingsVersion\";\nimport {api} from \"../constants/api\";\nimport ajax from \"../utils/ajax\";\nimport SettingsHeader from \"../components/SettingsScreen/SettingsHeader\";\n\nclass Content extends Component {\n\n    changeTheme = async () => {\n        await this.props.setTheme(this.props.theme === \"light\" ? \"dark\" : \"light\");\n    };\n\n    logout = async () => {\n        const t = translate[this.props.language];\n        Modal.alert(null, t.logout_confirm, [\n            { text: t.no, onPress: () => {return false;}, style: 'cancel' },\n            { text: t.yes, onPress: async () => {\n                    // try { await firebase.auth().signOut(); } catch(e) { }\n                    // try { await GoogleSignin.signOut(); } catch(e) { }\n                    // try { await LoginManager.logOut(); } catch(e) { }\n                    ajax(api.logout, {session: this.props.session});\n                    this.props.setUser(null);\n                    this.props.setSession(null);\n                    // this.props.selectCard(null);\n                    // this.props.setFriends([]);\n                    // this.props.setNotifications([]);\n                }},\n        ]);\n    };\n\n    clearCache = async () => {\n        // const t = translate[this.props.language];\n        // Modal.alert(t.clear_cache_confirmation, t.clear_cache_description, [\n        //     { text: t.no, onPress: () => {return false;}, style: 'cancel' },\n        //     { text: t.yes, onPress: () => {\n        //             this.props.selectCard(null);\n        //             this.props.setFriends([]);\n        //             this.props.setNotifications([]);\n        //             this.props.deleteAllCards();\n        //             AsyncStorage.clear();\n        //         }},\n        // ]);\n    };\n\n    clearHistory = async () => {\n        // const t = translate[this.props.language];\n        // Modal.alert(t.clear_history_confirmation, t.clear_history_description, [\n        //     { text: t.no, onPress: () => {return false;}, style: 'cancel' },\n        //     { text: t.yes, onPress: async () => {\n        //             let date = new Date().getTime();\n        //             await this.props.saveSearch([], date);\n        //             let res = await ajax(api.save_search, {\n        //                 search: [],\n        //                 search_updated: date\n        //             });\n        //             if (res.ok) {\n        //                 notifyUpdateSearch(this.props.user._id, date);\n        //             }\n        //         }},\n        // ]);\n    };\n\n    shareKitkard = async () => {\n        // try {\n        //     const result = await Share.share({\n        //         message: host.uri,\n        //     });\n        //\n        //     if (result.action === Share.sharedAction) {\n        //         if (result.activityType) {\n        //             // shared with activity type of result.activityType\n        //         } else {\n        //             // shared\n        //         }\n        //     } else if (result.action === Share.dismissedAction) {\n        //         // dismissed\n        //     }\n        // } catch (error) {\n        //     alert(error.message);\n        // }\n    };\n\n    action = (item) => {\n        switch(item) {\n            case \"language\": this.changeLanguage(); break;\n            case \"theme\": this.changeTheme(); break;\n            case \"clear_cache\":this.clearCache(); break;\n            case \"clear_history\":this.clearHistory(); break;\n            case \"share_kitkard\":this.shareKitkard(); break;\n            case \"about_kitkard\": window.location = \"/about\"; break;\n            case \"help\": window.location = \"/help\"; break;\n            case \"policy\": window.location = \"/policy\"; break;\n            case \"terms\": window.location = \"/terms\"; break;\n            case \"logout\":this.logout(); break;\n            default: break;\n        }\n    };\n\n    changeLanguage = () => {\n        const t = translate[this.props.language];\n        Modal.operation([\n            { text: getText(t, \"english\"), onPress: () => this.props.setLanguage('en') },\n            { text: getText(t, \"spanish\"), onPress: () => this.props.setLanguage('es') },\n            { text: getText(t, \"russian\"), onPress: () => this.props.setLanguage('ru') }\n        ]);\n    };\n\n    render() {\n        const {theme, language} = this.props;\n        const color = colors[theme];\n        const t = translate[language];\n\n        return (\n            <div className={\"settings\"}>\n                <ScrollView style={{ flex: 1, width: '100%', backgroundColor: color.background}}>\n\n                    <SettingsHeader/>\n                    {/*<SettingsItem item=\"cardholder\"     onPress={this.action}/>*/}\n                    {/*<SettingsItem item=\"keepers\"        onPress={this.action} separator={false}/>*/}\n\n                    <SettingsSeparator title=\"settings\"/>\n                    <SettingsItem item=\"language\"       onPress={this.action} rightText={getText(t, \"current_language\")}/>\n                    <SettingsItem item=\"theme\"          onPress={this.action} status={theme === \"dark\"}/>\n                    {/*<SettingsItem item=\"push_notifications\"  onPress={this.action} icon={\"notifications\"}/>*/}\n                    {   this.props.user === null ? null :\n                        <SettingsItem item=\"change_password\" onPress={this.action} icon=\"password\" title={\"change_password\"}/>\n                    }\n                    <SettingsItem item=\"clear_cache\"    onPress={this.action} icon=\"cache\"/>\n                    {   this.props.user === null ? null :\n                        <SettingsItem item=\"clear_history\" onPress={this.action} icon=\"history\"/>\n                    }\n                    <SettingsItem item=\"share_kitkard\"  onPress={this.action} icon=\"share\" separator={false}/>\n\n                    <SettingsSeparator title=\"documentation\"/>\n                    <SettingsItem item=\"about_kitkard\"  onPress={this.action} icon={\"kitkard_round\"}/>\n                    <SettingsItem item=\"help\"           onPress={this.action} icon={\"help\"}/>\n                    <SettingsItem item=\"policy\"         onPress={this.action}/>\n                    <SettingsItem item=\"terms\"          onPress={this.action} separator={false}/>\n                    {/*<SettingsItem item=\"permissions\"    onPress={this.action} icon={\"terms\"} separator={false}/>*/}\n\n                    {\n                        this.props.user == null ? null :\n                            (\n                                <span>\n                                <SettingsSeparator title=\"\"/>\n                                    <SettingsItem item=\"logout\"         onPress={this.action} separator={false}/>\n                                </span>\n                            )\n                    }\n                    <SettingsVersion/>\n\n\n                </ScrollView>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    theme: state.theme,\n    screen: state.screen,\n    language: state.language,\n    user: state.user,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setTheme: theme => dispatch(setTheme(theme)),\n    setLanguage: language => dispatch(setLanguage(language)),\n    setUser: user => dispatch(setUser(user)),\n    setSession: session => dispatch(setSession(session)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Content)\n\n","import React from 'react';\n// import Icon from 'react-native-vector-icons/MaterialIcons';\nimport KitIcon from './KitIcon';\n// import { View, StyleSheet, TextInput } from 'react-native';\n// import { InputItem } from 'antd-mobile';\nimport '../styles/PasswordInput.scss';\nimport PropTypes from \"prop-types\";\n\nexport default class PasswordInputText extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            icEye: 'visibility_off',\n            password: true\n        }\n    }\n\n    changePwdType = () => {\n        let newState;\n        if (this.state.password) {\n            newState = {\n                icEye: 'visibility',\n                password: false\n            }\n        } else {\n            newState = {\n                icEye: 'visibility_off',\n                password: true\n            }\n        }\n\n        // set new state value\n        this.setState(newState)\n\n    };\n\n\n    render() {\n        const {onChange, iconSize} = this.props;\n\n        return (\n            <div className={'passwordView'}>\n                <input className={'password'}\n                       placeholder={this.props.placeholder}\n                       onChange={(evt) => onChange(evt.target.value)}\n                       value={this.props.value}\n                       type={this.state.password ? 'password' : 'text'}/>\n               <div className='toggle-password'\n                    onClick={this.changePwdType}>\n                    <KitIcon className={'icon'}\n                          name={this.state.icEye}\n                          size={iconSize}\n                          color={'white'}\n                    />\n               </div>\n            </div>\n        );\n    }\n}\n\nPasswordInputText.defaultProps = {\n    onChange: PropTypes.Function,\n    iconSize: 25,\n};\n\n","export const emailValidation = (text) => {\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/ ;\n    return reg.test(text);\n};\n","import React,  {Component} from 'react';\nimport {Button, ActivityIndicator, Modal} from 'antd-mobile';\nimport {setLanguage, setSession, setTheme, setUser} from \"../redux/actions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport colors from \"../constants/colors\";\nimport '../styles/SignIn.scss';\nimport PasswordInputText from \"../components/PasswordInputText\";\nimport {getText} from \"../translations\";\nimport translate from \"../translations\";\nimport {emailValidation} from \"../utils/emailValidation\";\nimport ajax from \"../utils/ajax\";\nimport {api} from \"../constants/api\";\n\nconst md5 = require('md5');\n\nclass SignIn extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        enabled: false,\n        socialEnabled: true,\n        spinner: false,\n        is_login: true\n    };\n\n    async setPassword(password) {\n        await this.setState({password});\n        this.validate();\n    }\n\n    async setEmail(email) {\n        await this.setState({email});\n        this.validate();\n    }\n    validate() {\n        let enabled = false;\n        if (\n            (\n                (\n                    this.state.is_login\n                    && ((this.state.email).replace(\"+\", \"\")).length > 0\n                )\n                || emailValidation(this.state.email)\n            )\n            && this.state.password.length >= 6) {\n            enabled = true;\n        }\n\n        this.setState({ enabled })\n    }\n\n    componentDidMount() {\n        this.validate();\n    }\n    toggleIsLogin = async () => {\n        await this.setState({is_login: !this.state.is_login});\n        this.validate()\n    };\n\n    sign = () => {\n        if (this.state.is_login) {\n            this.login();\n        } else {\n            this.registration();\n        }\n    };\n    registration = async () => {\n        this.setState({spinner: true});\n        let hash = md5(this.state.password);\n        let res = await ajax(api.registration, {\n            email: this.state.email,\n            password: hash,\n        });\n        if (res.ok) {\n            this.setState({spinner: false});\n            this.props.setUser(res.user);\n            this.props.setSession(res.session);\n        } else {\n            const t = translate[this.props.language];\n            let text = 'ERROR';\n            switch (res.status) {\n                case \"incorrect\": text = t.incorrect_email; break;\n                case \"exist\": text = t.user_exist; break;\n                case \"unreachable\": text = t.unreachable; break;\n            }\n            this.setState({spinner: false});\n            Modal.alert(null, text, [ { text: t.ok, onPress: () => {return false;}, style: 'cancel' }] )\n        }\n    };\n    login = async () => {\n        this.setState({spinner: true});\n        let hash = md5(this.state.password);\n        let res = await ajax(api.login, {\n            email: this.state.email,\n            password: hash,\n        });\n\n        if (res.ok) {\n            this.setState({spinner: false});\n            this.props.setUser(res.user);\n            this.props.setSession(res.session);\n        } else {\n            const t = translate[this.props.language];\n            let text = 'ERROR';\n            switch (res.status) {\n                case \"incorrect\":\n                    text = emailValidation(this.state.email) ? t.incorrect_email : t.incorrect_username;\n                    break;\n                case \"disabled\": text = getText(t, \"disabled\"); break;\n                case \"unreachable\": text = t.unreachable; break;\n            }\n            this.setState({spinner: false});\n            Modal.alert(null, text, [ { text: t.ok, onPress: () => {return false;}, style: 'cancel' }] )\n        }\n    };\n    render() {\n        const {theme, language} = this.props;\n        const color = colors[theme];\n        const t = translate[language];\n\n        return <div className='sign-in' style={{backgroundColor: color.primary}}>\n            <ActivityIndicator\n                toast\n                animating={this.state.spinner}\n            />\n            <div style={{\n                width: 300,\n                // height: 100,\n                alignItems: 'center',\n                justifyContent: 'center',\n            }}>\n                <img\n                    alt={\"Kitkard\"}\n                    style={{\n                        marginBottom: 20,\n                        width: 250,\n                        height: 59.25\n                    }}\n                    src={'/assets/images/kitkard_white.png'}\n                />\n                <input className={'email'}\n                           value={this.state.email}\n                           onChange={(evt) => this.setEmail(evt.target.value)}\n                           placeholder={this.state.is_login ? getText(t, \"username_or_email\") : getText(t, \"enter_email\")}\n                           autoCapitalize='none'\n                />\n                <PasswordInputText\n                    value={this.state.password}\n                    placeholder={getText(t, \"password\")}\n                    iconColor={'white'}\n                    onChange={ (password) => this.setPassword(password) }\n                />\n                <Button\n                    disabled={!this.state.enabled}\n                    className={'buttonRegister'}\n                    onClick={() => this.sign()}>\n                    <span className={'submitText'}>{this.state.is_login ? getText(t, 'sign_in') : getText(t, 'register') }</span>\n                </Button>\n                <Button\n                    disabled={false}\n                    className={'buttonBack'}\n                    onClick={() => this.toggleIsLogin()}>\n                    <span className={'submitText'}>{this.state.is_login ? getText(t, 'register') : getText(t, 'sign_in')} </span>\n                </Button>\n                <div className={'socialButtons'}>\n                    <Button className={'social_button'}\n                               onClick={this.googleSignIn}>\n                        <div className={'social_button_container'}>\n                            <img\n                                alt=\"google\"\n                                className={'social_image'}\n                                src={'/assets/images/google.png'} />\n                            <div className={'social_text'}>{getText(t, 'sign_in_with_google')}</div>\n                        </div>\n                    </Button>\n                    <Button className={'social_button'} style={{marginTop: 20}}\n                               onClick={this.facebookSignIn}>\n                        <div className={'social_button_container'}>\n                            <img\n                                alt=\"facebook\"\n                                className={'social_image'}\n                                src={'/assets/images/facebook.png'} />\n                            <div className={'social_text'}>{getText(t, 'sign_in_with_facebook')}</div>\n                        </div>\n                    </Button>\n                </div>\n            </div>\n        </div>;\n    }\n};\n\nconst mapStateToProps = state => ({\n    theme: state.theme,\n    screen: state.screen,\n    language: state.language,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setTheme: theme => dispatch(setTheme(theme)),\n    setLanguage: language => dispatch(setLanguage(language)),\n    setUser: user => dispatch(setUser(user)),\n    setSession: session => dispatch(setSession(session)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SignIn)","import React,  {Component} from 'react';\nimport '../styles/AspectRatio.scss';\n\n\nclass AspectRatio extends Component {\n    state = {\n        width: 0,\n        height: 0\n    };\n\n    resize = () => {\n\n        const {widthRatio, heightRatio} = this.props;\n        const maxHeight = this.container.clientHeight - 20;\n        const maxWidth = this.container.clientWidth - 20;\n\n        let width = maxWidth;\n        let height = maxWidth * heightRatio / widthRatio;\n\n        if (height > maxHeight) {\n            height = maxHeight;\n            width = maxHeight * widthRatio / heightRatio;\n        }\n\n        this.setState({ width, height });\n    };\n\n    componentDidMount() {\n        this.resize();\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.resize)\n    }\n\n    render() {\n\n        return <div className='aspect-ratio'\n                    ref={ (container) => this.container = container}>\n            <div className=\"aspect-ratio-content\" style={{width: this.state.width, height: this.state.height}}>\n                {this.props.children}\n            </div>\n        </div>;\n    }\n}\n\nexport default AspectRatio;","import React from 'react';\n// import { StyleSheet, Text, View, Dimensions, TextInput } from 'react-native';\nimport { Modal, ActivityIndicator, Button } from 'antd-mobile';\n// import Spinner from 'react-native-loading-spinner-overlay';\n// import Touchable from 'react-native-platform-touchable';\nimport { connect } from 'react-redux';\nimport {addUserCard, saveCard, selectCard} from \"../redux/actions\";\nimport translate from \"../translations\";\nimport colors from \"../constants/colors\";\nimport ajax from \"../utils/ajax\";\nimport {api} from \"../constants/api\";\n\nimport '../styles/CreateCard.scss';\nimport AspectRatio from \"../components/AspectRatio\";\n\nclass CreateCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.flip = props.flip;\n        this.share = props.share;\n        this.state = {\n            cardname: \"\",\n            enabled: false,\n            spinner: false\n        }\n    }\n\n    setCardname = async (cardname) => {\n        await this.setState({\n            cardname: cardname.replace(/[^0-9a-zA-Z_.]/gi, \"\").replace(/\\.+/gi, \".\").replace(/_+/gi, \"_\").replace(/^[0-9]/, \"\")\n        });\n        this.setState({\n            enabled: this.cardNameIsValid(this.state.cardname)\n        })\n    };\n\n    cardNameIsValid(username) {\n        if (username === \"\" || username == null || username.length < 5 || username.length > 25 ||\n            username.match(/^[0-9]/) ) {\n            return false;\n        }\n        return !!username.match(/^[a-zA-Z0-9._]*$/);\n    };\n\n    createCard = async () => {\n        if (this.cardNameIsValid(this.state.cardname)) {\n            this.setState({ spinner: true, enabled: false });\n            const res = await ajax(api.create_card, {\n                cardname: this.state.cardname\n            });\n\n            if (res.ok) {\n                await this.props.saveCard(res.card);\n                await this.props.addUserCard(res.card.cardname);\n                this.props.selectCard(res.card.cardname);\n                this.setState({ spinner: false });\n                if (this.props.onCancel !== undefined) {\n                    this.props.onCancel();\n                }\n            } else {\n                const t = translate[this.props.language];\n                if (res.status === \"exist\") {\n                    Modal.alert(null, t.card_exist, [ { text: t.ok, onPress: () => {return false;}, style: 'cancel' }] )\n                } else {\n                    this.setState({ enabled: true });\n                }\n                this.setState({ spinner: false });\n            }\n        }\n    };\n\n    render() {\n        const {theme, language, user} = this.props;\n        const t = translate[language];\n        const color = colors[theme];\n\n        const isFirst = user.cards === undefined || user.cards.length === 0;\n        return (\n            <div className='create-card' style={{backgroundColor: color.primary}}>\n                <ActivityIndicator\n                    toast\n                    animating={this.state.spinner}\n                />\n                <AspectRatio widthRatio={17} heightRatio={27}>\n                    <div className='card' style={{backgroundColor: color.card}}>\n                        <div className='header' style={{color: color.text}}>\n                            {isFirst ? t[\"first_cardname\"] : t[\"add_cardname\"]}\n                        </div>\n                        <div className='cardname_description' style={{color: color.text}}>\n                            {isFirst ? t[\"first_new_cardname\"] : t[\"new_cardname\"]}\n                        </div>\n                        <input className='cardname' style={{color: color.text, backgroundColor: color.textInputBg}}\n                                   value={\"+\"+this.state.cardname}\n                                   onChange={(evt) => this.setCardname(evt.target.value)}\n                                   autoCapitalize='none'\n                                   maxLength={26}\n                        />\n                        <button\n                            className='buttonRegister'\n                            disabled={!this.state.enabled}\n                            onClick={this.createCard}>\n                            <span className={'submitText'}>{t[\"create_card\"]}</span>\n                        </button>\n                        <CancelButton hidden={isFirst} onCancel={() => this.props.onCancel()} t={t}/>\n\n                    </div>\n                </AspectRatio>\n            </div>\n        );\n    }\n}\n\nconst CancelButton = props => {\n    const {hidden, onCancel, t} = props;\n\n    if (hidden) {\n        return null;\n    } else {\n        return (\n            <Button\n                className='buttonCancel'\n                hide={true}\n                onClick={onCancel}>\n                <span className={'submitText'}>{t[\"cancel\"]}</span>\n            </Button>\n        )\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        language: state.language,\n        theme: state.theme,\n        user: state.user,\n        cards: state.cards,\n    }\n};\nconst mapDispatchToProps = dispatch => ({\n    addUserCard: cardname => dispatch(addUserCard(cardname)),\n    saveCard: card => dispatch(saveCard(card)),\n    selectCard: cardname => dispatch(selectCard(cardname)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CreateCard)\n\n","export const save_card = \"save_card\";\nexport const delete_card = \"delete_card\";\nexport const delete_all_cards = \"delete_all_cards\";\nexport const save_card_params = \"save_card_params\";\n\nexport default (cards = {}, action) => {\n    switch(action.type)\n    {\n        case save_card:\n            return {\n                ...cards,\n                [action.card.cardname]: action.card\n            };\n        case save_card_params:\n            let card = cards[action.card.cardname];\n            if (card !== undefined) {\n                card = {\n                    ...card,\n                    ...action.card.params\n                };\n                return {\n                    ...cards,\n                    [action.card.cardname]: card\n                }\n            } else {\n                return cards;\n            }\n            // return {\n            //     ...cards,\n            //     [action.card.cardname]: {\n            //         ...cards[action.card.cardname],\n            //         ...action.card.params\n            //     }\n            // };\n        case delete_card:\n            delete cards[action.cardname];\n            return cards;\n        case delete_all_cards:\n            return {};\n        default:\n            return cards;\n    }\n}\n","export const select_card = \"select_card\";\n\nexport default (cardname = null, action) => {\n    switch(action.type)\n    {\n        case select_card:\n            return action.cardname;\n        default:\n            return cardname;\n    }\n}\n","import React,  {Component} from 'react';\n// import {WingBlank, WhiteSpace} from 'antd-mobile';\nimport {setLanguage, setTheme} from \"../redux/actions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport '../styles/Home.scss';\nimport colors from \"../constants/colors\";\nimport SignIn from \"../views/SignIn\";\nimport CreateCard from \"../views/CreateCard\";\n\n\nclass Home extends Component {\n\n    renderHome = () => {\n        const {user, session} = this.props;\n\n        if(user == null || session == null) {\n            return <SignIn/>;\n        } else if (user.cards === undefined || user.cards.length === 0) {\n            return <CreateCard/>\n        } else {\n            return <div>TODO: My Cards</div>;//<MyCards/>\n            // return null\n        }\n    };\n\n    render() {\n        const {theme} = this.props;\n        const color = colors[theme];\n\n        return <div className='home'>\n            {\n                this.renderHome()\n            }\n        </div>;\n    }\n}\n\nconst mapStateToProps = state => ({\n    theme: state.theme,\n    screen: state.screen,\n    language: state.language,\n    user: state.user,\n    session: state.session,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setTheme: theme => dispatch(setTheme(theme)),\n    setLanguage: language => dispatch(setLanguage(language)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Home)","import React, { Component } from 'react';\n\nimport '../../styles/MobileContent.scss';\nimport {setScreen} from \"../../redux/actions\";\nimport connect from \"react-redux/es/connect/connect\";\n\nimport Settings from \"../../screens/Settings\";\nimport Home from \"../../screens/Home\";\n\nclass Content extends Component {\n\n    componentWillMount() {\n        // this.props.setScreen(\"settings\")\n    }\n\n    getScreen = () => {\n        switch(this.props.screen) {\n            case 'settings': return <Settings/>;\n            case 'notifications': return <div>Notifications</div>;\n            case 'my_cards': return <Home/>;\n            case 'search': return <div>Search</div>;\n            case 'cardholder': return <div>Cardholder</div>;\n            default: return null;\n        }\n    };\n\n    render() {\n        return (\n            <div className={\"content\"}>\n                {this.getScreen()}\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    theme: state.theme,\n    screen: state.screen,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setScreen: screen => dispatch(setScreen(screen))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Content)\n\n","import React, { Component } from 'react';\nimport { Flex } from 'antd-mobile';\n\nimport {connect} from \"react-redux\";\nimport {setTheme} from \"../../redux/actions\";\nimport colors from \"../../constants/colors\";\nimport KitIcon from \"../KitIcon\";\n\nimport '../../styles/TabBarItem.scss';\nimport {Link} from \"react-router-dom\";\n\nclass TabBarItem extends Component {\n\n    render() {\n        const {theme, icon, selected, selectedCard} = this.props;\n        const color = colors[theme];\n\n        const path = icon === \"my_cards\" ? (selectedCard === null ? \"\" : \"+\"+selectedCard) : icon;\n\n        return (\n            <Flex.Item className=\"tabBar-item\" style={{backgroundColor: color.tabBar}}>\n                <Link to={`/${path}`} className={'item-button'} onClick={() => this.props.onSelect(icon)}>\n                    <KitIcon name={icon} color={selected ? color.primary : color.icon} size={25} />\n                </Link>\n            </Flex.Item>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    theme: state.theme,\n    selectedCard: state.selectedCard,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setTheme: theme => dispatch(setTheme(theme))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TabBarItem)\n/*\nconst styles = StyleSheet.create({\n    item: {\n        flex: 1,\n        height: \"100%\",\n        width: '100%',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    button: {\n        width: \"100%\",\n        height: \"100%\",\n    },\n    buttonContent: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n});\n*/","import React, { Component } from 'react';\nimport { Flex } from 'antd-mobile';\n\nimport {connect} from \"react-redux\";\nimport {setScreen} from \"../../redux/actions\";\nimport colors from \"../../constants/colors\";\nimport TabBarItem from \"./TabBarItem\";\nimport \"../../styles/TabBar.scss\";\n\nclass TabBar extends Component {\n\n    select = async item => {\n        if(this.props.screen !== item) {\n            await this.props.setTabBarItem(item);\n            switch (item) {\n                case \"settings\":\n                    console.log('Settings');\n                    break;\n                case \"notifications\":\n                    console.log('Notifications');\n                    break;\n                case \"search\":\n                    console.log('Search');\n                    break;\n                case \"cardholder\":\n                    console.log('Cardholder');\n                    break;\n                default: case \"my_cards\":\n                    console.log('Home');\n                    break;\n\n            }\n        }\n    };\n\n    render() {\n        const {theme, screen} = this.props;\n        const color = colors[theme];\n\n        return (\n            <Flex className={\"tabBar\"} style={{backgroundColor: color.tabBar}}>\n                <TabBarItem icon=\"settings\" selected={screen === \"settings\"} onSelect={item => this.select(item)}/>\n                <TabBarItem icon=\"notifications\" selected={screen === \"notifications\"} onSelect={item => this.select(item)}/>\n                <TabBarItem icon=\"my_cards\" selected={screen === \"my_cards\"} onSelect={item => this.select(item)}/>\n                <TabBarItem icon=\"search\" selected={screen === \"search\"} onSelect={item => this.select(item)}/>\n                <TabBarItem icon=\"cardholder\" selected={screen === \"cardholder\"} onSelect={item => this.select(item)}/>\n            </Flex>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    theme: state.theme,\n    screen: state.screen,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setTabBarItem: screen => dispatch(setScreen(screen))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TabBar)\n","import React, { Component } from 'react';\nimport 'antd-mobile/dist/antd-mobile.css';  // or 'antd-mobile/dist/antd-mobile.less'\nimport '../styles/Mobile.scss';\nimport Content from \"../components/Mobile/Content\";\nimport TabBar from \"../components/Mobile/TabBar\";\n\nclass Mobile extends Component {\n\n    render() {\n        return (\n            <div className=\"mobile\">\n                <Content/>\n                <TabBar/>\n            </div>\n        );\n    }\n}\n\nexport default Mobile;\n","import React  from 'react';\nimport { withAdaptive } from 'react-adaptive';\nimport Desktop from \"./containers/Desktop\";\nimport Mobile from \"./containers/Mobile\";\n\n\n\nconst mapSizeToComponent = size => props => {\n    if (size.width < 420) {\n        return <Mobile {...props}/>;\n    }\n\n    // if (size.width < 960) {\n    //     return <Tablet {...props} />;\n    // }\n\n    return <Desktop {...props}/>;\n};\n\nexport default withAdaptive({ mapSizeToComponent });\n\n","import React, {Component} from 'react';\nimport Adaptive from \"../Adaptive\";\nimport {setScreen} from \"../redux/actions\";\nimport connect from \"react-redux/es/connect/connect\";\n\nclass AppNavigator extends Component {\n\n    componentDidMount() {\n        const location = window.location;\n        switch (location.pathname) {\n            case \"/settings\":\n                this.props.setScreen(\"settings\");\n                break;\n            case \"/notifications\":\n                this.props.setScreen(\"notifications\");\n                break;\n            case \"/my_cards\":\n                this.props.setScreen(\"my_cards\");\n                break;\n            case \"/search\":\n                this.props.setScreen(\"search\");\n                break;\n            case \"/cardholder\":\n                this.props.setScreen(\"cardholder\");\n                break;\n            default:\n                if (location.pathname.startsWith(\"/+\")) {\n                    this.props.setScreen(\"my_cards\");\n\n                    //TODO: if is my card show it\n                    //TODO: if is not my card show card in Modal\n                }\n                break;\n\n        }\n    }\n\n    render() {\n        return <Adaptive/>\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    screen: state.screen,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setScreen: screen => dispatch(setScreen(screen))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AppNavigator)\n","import React, { Component } from 'react';\nimport detectBrowserLanguage from 'detect-browser-language'\nrequire('../styles/UnderContruction.scss');\n\nclass UnderConstruction extends Component {\n\n    state = {\n        userLanguage: \"\"\n    };\n\n    componentDidMount() {\n        let language = detectBrowserLanguage();\n        language = language.split(\"-\")[0];\n        // var language = window.navigator.language || window.navigator.userLanguage;\n        if (language !== 'ru')\n            language = 'en';\n        this.setState({ userLanguage: language })\n    }\n\n    getGooglePlayButton = () => {\n        return this.state.userLanguage === 'ru' ?\n            <a href='https://play.google.com/store/apps/details?id=com.kitkard&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'><img alt='Доступно в Google Play' src='/images/ru_badge_web_generic.png'/></a>\n            :\n            <a href='https://play.google.com/store/apps/details?id=com.kitkard&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'><img alt='Get it on Google Play' src='/images/en_badge_web_generic.png'/></a>\n        ;\n    };\n\n    getApplePlayButton = () => {\n        return this.state.userLanguage === 'ru' ?\n            <a href='https://itunes.apple.com/by/app/kitkard/id1286872072'><img alt='Загрузите в App Store' src='/images/download_on_app_store_ru.svg'/></a>\n            :\n            <a href='https://itunes.apple.com/by/app/kitkard/id1286872072'><img alt='Download on The App Store' src='/images/download_on_app_store_en.svg'/></a>\n        ;\n    };\n\n    render() {\n\n        const { userLanguage } = this.state;\n\n        const translation = text[userLanguage];\n\n        return (\n            <div className=\"welcome\">\n                <div className=\"background\"/>\n                { this.state.userLanguage === \"\" ? null :\n                    <div className=\"form\">\n                        <div className=\"kitkard-logo\"/>\n                        <h1 className=\"under-construction\">{translation.site_under_construction}</h1>\n                        <h2 className=\"tray-later\">{translation.try_again_later}</h2>\n                        <h2 className=\"install-app\">{translation.install_our_app}</h2>\n                        <div className=\"apps\">\n                            <div className=\"google\">\n                                {\n                                    this.getGooglePlayButton()\n                                }\n                            </div>\n                            <div className=\"apple\">\n                                {\n                                    this.getApplePlayButton()\n                                }\n                            </div>\n\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default UnderConstruction;\n\n\nconst text = {\n    ru: {\n        site_under_construction: \"САЙТ НАХОДИТСЯ В РАЗРАБОТКЕ\",\n        try_again_later: \"Попробуйте зайти позднее\",\n        install_our_app: \"Устанавливайте наше приложение\",\n    },\n    en: {\n        site_under_construction: \"SITE UNDER CONSTRUCTION\",\n        try_again_later: \"Try again later\",\n        install_our_app: \"Install our app\",\n    }\n};\n","import React, {Component} from 'react';\nimport renderHTML from 'react-render-html';\nimport ajax from \"../utils/ajax\";\nimport {api} from \"../constants/api\";\nimport detectBrowserLanguage from \"detect-browser-language\";\nimport ScrollView from \"../components/ScrollView\";\n\nimport '../styles/Document.scss';\nimport KitIcon from \"../components/KitIcon\";\n\nclass Document extends Component {\n\n    state = {\n        content: \"<div></div>\"\n    };\n\n    componentDidMount() {\n        this.loadDocument();\n    }\n\n    async loadDocument() {\n        let language = detectBrowserLanguage();\n        language = language.split(\"-\")[0];\n        if (language !== 'ru')\n            language = 'en';\n        let res = await ajax(api.doc, {doc: this.props.document, lang: language});\n\n        if (res.ok) {\n            this.setState({content: res.html});\n        }\n    }\n\n    render() {\n\n        return <div className=\"document\">\n            <div className='header'>\n                <div className=\"max-content\">\n                <a href=\"/\" className='logo'>\n                    <KitIcon name=\"my_cards\" size={36} color={\"white\"}/>\n                    <span className={\"home-icon\"} />\n                    <img src={\"/assets/images/kitkard_white.png\"} alt={\"kitkard\"} style={{height: 32}}/>\n                </a>\n                </div>\n            </div>\n\n            <ScrollView style={{backgroundColor: 'white'}}>\n                <div className=\"doc-content\">\n                    <div className=\"max-content\">\n                    {\n                        renderHTML(this.state.content)\n                    }\n                    </div>\n                </div>\n            </ScrollView>\n        </div>\n    }\n}\n\nexport default Document;","import React from \"react\";\nimport {BrowserRouter, Switch, Route, Redirect} from \"react-router-dom\";\nimport AppNavigator from \"./AppNavigator\";\nimport UnderConstruction from \"../screens/UnderConstruction\";\nimport Document from \"../screens/Document\";\n\nfunction AppRouter() {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={Home} screen={\"my_cards\"} className={\"router\"}/>\n                <Route exact path=\"/+:cardname\" component={Home} screen={\"my_cards\"} className={\"router\"}/>\n                <Route exact path=\"/my_cards\" component={Home} screen={\"my_cards\"} className={\"router\"}/>\n                <Route exact path=\"/settings\" component={Home} screen={\"settings\"} className={\"router\"}/>\n                <Route exact path=\"/notifications\" component={Home} screen={\"notifications\"} className={\"router\"}/>\n                <Route exact path=\"/search\" component={Home} screen={\"search\"} className={\"router\"}/>\n                <Route exact path=\"/cardholder\" component={Home} screen={\"cardholder\"} className={\"router\"}/>\n\n                <Route path=\"/help\" component={Help} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/policy\" component={Policy} />\n                <Route path=\"/terms\" component={Terms} />\n                <Route path=\"/conditions\" component={Conditions} />\n                <Route path=\"*\" render={() => (<Redirect to=\"/\" />)} />\n                {/*<Route path=\"*\" component={NoMatch} />*/}\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\n\nconst UNDER_CONSTRUCTION = true;\n\nfunction Home() {\n\n    // return <AppNavigator className='full-size'/>;\n    if (!UNDER_CONSTRUCTION) {\n        return <AppNavigator className='full-size' screen={this.props.screen}/>;\n    } else {\n        return <UnderConstruction/>;\n    }\n}\n\nfunction Help() {\n    // return <h2>Help</h2>;\n    return <Document document={\"help\"}/>;\n}\nfunction About() {\n    return <Document document={\"about\"}/>;\n}\nfunction Policy() {\n    return <Document document={\"policy\"}/>;\n}\nfunction Terms() {\n    return <Document document={\"terms\"}/>;\n}\nfunction Conditions() {\n    return <Document document={\"conditions\"}/>;\n}\n\nexport default AppRouter;","import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\n\nimport './App.css';\nimport detectBrowserLanguage from \"detect-browser-language\";\nimport {setLanguage, setSession, setTheme, setUser} from \"./redux/actions\";\nimport getValueOrDefault from \"./utils/getValueOrDefault\";\nimport AppRouter from \"./navigation/AppRouter\";\nrequire('./styles/app.scss');\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.getStateFromLS();\n        window.addEventListener(\n            \"beforeunload\",\n            this.saveStateToLocalStorage.bind(this)\n        );\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\n            \"beforeunload\",\n            this.saveStateToLocalStorage.bind(this)\n        );\n\n        this.saveStateToLocalStorage();\n    }\n\n    saveStateToLocalStorage(){\n        this.saveToLocalStorage('language', this.props.language, false);\n        this.saveToLocalStorage('theme', this.props.theme, false);\n        this.saveToLocalStorage('user', this.props.user, true);\n        this.saveToLocalStorage('session', this.props.session, false);\n    }\n\n    async getStateFromLS(){\n\n        let language = await localStorage.getItem('language');\n        await this.props.setLanguage(getValueOrDefault(language, detectBrowserLanguage().split(\"-\")[0]));\n\n        let theme = await localStorage.getItem('theme');\n        await this.props.setTheme(getValueOrDefault(theme, \"light\"));\n\n\n        let user = getValueOrDefault(await localStorage.getItem('user'), null);\n        if (user !== null) {\n            await this.props.setUser(JSON.parse(user));\n        }\n\n        let session = await localStorage.getItem('session');\n        await this.props.setSession(getValueOrDefault(session, null));\n\n\n        // await this.props.setUser(JSON.parse(user));\n        // await this.props.setSession(session);\n\n\n    }\n\n    saveToLocalStorage(name, value, isObject){\n        if (value == null){\n            localStorage.removeItem(name)\n        } else {\n            value = isObject ? JSON.stringify(value) : value;\n            localStorage.setItem(name, value);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <AppRouter className={'full-size'}/>\n            </div>\n        );\n    }\n}\n\n// export default withCookies(App);\nconst mapStateToProps = state => ({\n    language: state.language,\n    theme: state.theme,\n    user: state.user,\n    session: state.session,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setLanguage: language => dispatch(setLanguage(language)),\n    setTheme: theme => dispatch(setTheme(theme)),\n    setUser: user => dispatch(setUser(user)),\n    setSession: session => dispatch(setSession(session)),\n\n});\n\nexport default connect( mapStateToProps, mapDispatchToProps )(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport themesReducer from './theme';\nimport tabBarReducer from './screen';\nimport languageReducer from './language';\nimport userReducer from './user';\nimport sessionReducer from './session';\nimport selectedCardReducer from './selectedCard';\nimport cardsReducer from './cards';\nimport notificationsReducer from './notifications';\nimport friendsReducer from './friends';\nimport shareReducer from './share';\n// import picturesReducer from './pictures';\n\nexport default combineReducers({\n    theme: themesReducer,\n    screen: tabBarReducer,\n    language: languageReducer,\n    user: userReducer,\n    cards: cardsReducer,\n    notifications: notificationsReducer,\n    friends: friendsReducer,\n    session: sessionReducer,\n    selectedCard: selectedCardReducer,\n    share: shareReducer,\n    // pictures: picturesReducer,\n});","export const set_notifications = \"set_notifications\";\nexport const save_notification = \"save_notification\";\n\nexport default (notifications = [], action) => {\n    switch(action.type)\n    {\n        case set_notifications:\n            return action.notifications;\n        case save_notification:\n            const i = notifications.findIndex(n => n._id === action.notification._id);\n            console.log(\"index\", i)\n            if(i >= 0) {\n                let notification = notifications[i];\n                notification = {\n                    ...notification,\n                    ...action.notification\n                };\n                return [\n                    ...notifications.slice(0, i),\n                    notification,\n                    ...notifications.slice(i + 1)\n                ]\n            } else {\n                return [\n                    ...notifications,\n                    action.notification\n                ]\n            }\n        default:\n            return notifications;\n    }\n}\n","export const set_friends = \"set_friends\";\nexport const save_friend = \"save_friend\";\nexport const delete_friend = \"delete_friend\";\n\nexport default (friends = [], action) => {\n    switch(action.type)\n    {\n        case set_friends:\n            return action.friends;\n        case save_friend:\n            const i = friends.findIndex(n => n._id === action.friend._id);\n            if(i >= 0) {\n\n                return [\n                    ...friends.slice(0, i),\n                    action.friend,\n                    ...friends.slice(i + 1)\n                ]\n            } else {\n                return [\n                    ...friends,\n                    action.friend\n                ]\n            }\n        case delete_friend:\n            return friends.filter(f => (\n                f.cardname !== action.cardname &&\n                f.friend_cardname !== action.friend_cardname\n            ));\n        default:\n            return friends;\n    }\n}\n","export const set_share = \"set_share\";\n\nexport default (share = null, action) => {\n    switch(action.type)\n    {\n        case set_share:\n            return action.share;\n        default:\n            return share;\n    }\n}\n","import React from 'react';\nimport  { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './redux/reducers';\n\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {};\nconst store = createStore(rootReducer, persistedState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nrender(\n    <Provider store={store}>\n        <App className=\"full-size\"/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}